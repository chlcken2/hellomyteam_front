name: Frontend-Release-Deploy

on:
  push:
    branches: [ release/1.0 ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        node-version: [16.14.x]

    steps:
      - name: Checkout Github-Actions     # Github Actions 사용을 위한 체크아웃
        uses: actions/checkout@v2

      - name: Install node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: $

      - name: Install Dependencies
        run: npm install

      - name: Start Build with npm
        run: npm run bhild
        env:
          CI: false

      - name: Setting for AWS         # AWS 권한셋팅
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3             # 빌드파일 S3 업로드
        run: aws deploy push --application-name=hellomyteam-front-release --description "myapp Test" --s3-location s3://hellomyteam-github-action-s3-bucket-front/hellomyteam-release/hellomyteam-release.zip --source .

      - name: Start Deploy with CodeDeploy      # CodeDeploy 실행
        run: aws deploy create-deployment --application-name=hellomyteam-front-release --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name=hellomyteam-front-release --s3-location bucket=hellomyteam-github-action-s3-bucket-front,bundleType=zip,key=hellomyteam-front-release/hellomyteam-front-release.zip


#name: Frontend-Release-Deploy # Workflow 이름
#on: # Event 감지
#  push:
#    branches:
#      - release/1.0 # 마스터 브랜치의 푸쉬가 일어날 때 CI/CD를 진행하겠다는 뜻
#
#jobs: # Job 설정
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout source code. # Repo checkout
#        uses: actions/checkout@v3
#
#      - name: setup node. # Repo checkout
#        uses: actions/setup-node@v3
#        with:
#          token: ${{ secrets.GH_DOTCOM_TOKEN }}
#          node-version: 16
#
#      - name: Check Node v # Node v 확인
#        run: node -v
#
#      - name: Install Dependencies # 의존 파일 설치
#        run: yarn install --frozen-lockfile
#        working-directory: frontend
#
#      - name: Build # React Build
#        run: yarn build
#        working-directory: frontend
#
#      - name: zip create
#        run:  zip -qq -r ./hellomyteam-front-release.zip .
#        working-directory: frontend
#        shell: bash
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#
#      - name: Upload to S3 # Upload build file to S3!
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          S3_BUCKET_NAME: hellomyteam-github-action-s3-bucket-front
#          PROJECT_NAME: hellomyteam-release
#          CODE_DEPLOY_APP_NAME: hellomyteam-front-release
#          CODE_DEPLOY_GROUP_NAME: hellomyteam-front-release
#        run: aws deploy push --application-name=$CODE_DEPLOY_APP_NAME --description "myapp Test" --s3-location s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip --source .
#
#      - name: Code Deploy
#        run: aws deploy create-deployment --application-name=$CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name=$CODE_DEPLOY_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,eTag=1f379203c82dbf0705b11fea0eb95b83-19,key=$PROJECT_NAME/$PROJECT_NAME.zip
#        working-directory: frontend